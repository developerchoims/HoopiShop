name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create application.yml from encoded secret
        id: create-app-yml
        env:
          PROP: ${{ secrets.PROPERTIES }}
        run: |
          mkdir -p ./hoopi/src/main/resources
          touch ./hoopi/src/main/resources/application.yml
          echo "$PROP" | base64 --decode > ./hoopi/src/main/resources/application.yml
          cat ./hoopi/src/main/resources/application.yml

  build-react:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Build and push React Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./hoopifront
          file: ./hoopifront/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REPO }}/my-react-app:latest

  build-spring:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Build and push Spring Boot Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./hoopi
          file: ./hoopi/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REPO }}/my-spring-boot-app:latest

  build-nginx:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Build and push Nginx Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REPO }}/my-nginx:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build-react, build-spring, build-nginx]
    env:
      SSH_KEY: ${{ secrets.SSH_KEY }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
    steps:
      - name: Deploy to EC2
        run: |
          # Save SSH private key to a file
          echo "$SSH_KEY" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa
          ssh -o StrictHostKeyChecking=no -i /tmp/id_rsa ec2-user@$SSH_HOST << 'EOF'
            cd /home/ec2-user/jwtProject
            docker-compose down --remove-orphans
            docker-compose pull
            docker-compose build --no-cache
            docker-compose up -d
            sleep 10
            docker-compose -T exec spring cat /app/application.yml
          EOF
