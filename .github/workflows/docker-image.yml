name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Create application.yml
        run: |
          cd ./hoopi/src/main/resources
          echo "${{ secrets.PROPERTIES }}" > application.yml

      - name: Grant execute permissions to gradlew
        run: chmod +x ./hoopi/gradlew

      - name: Build with Gradle
        run: |
          cd ./hoopi
          ./gradlew clean build -x test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker images
        run: |
          docker build -t my-react-app:latest ./path-to-react-app
          docker build -t my-spring-boot-app:latest ./path-to-spring-boot-app
          docker build -t my-nginx:latest ./path-to-nginx-config

      - name: Push Docker images to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and push Docker images
        run: |
          docker tag my-react-app:latest ${{ secrets.DOCKER_REPO }}/my-react-app:latest
          docker tag my-spring-boot-app:latest ${{ secrets.DOCKER_REPO }}/my-spring-boot-app:latest
          docker tag my-nginx:latest ${{ secrets.DOCKER_REPO }}/my-nginx:latest
          docker push ${{ secrets.DOCKER_REPO }}/my-react-app:latest
          docker push ${{ secrets.DOCKER_REPO }}/my-spring-boot-app:latest
          docker push ${{ secrets.DOCKER_REPO }}/my-nginx:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no -i "$SSH_PRIVATE_KEY" ec2-user@${{ secrets.SSH_HOST }} << 'EOF'
            docker pull ${{ secrets.DOCKER_REPO }}/my-react-app:latest
            docker pull ${{ secrets.DOCKER_REPO }}/my-spring-boot-app:latest
            docker pull ${{ secrets.DOCKER_REPO }}/my-nginx:latest

            docker stop my-react-app || true
            docker stop my-spring-boot-app || true
            docker stop my-nginx || true

            docker rm my-react-app || true
            docker rm my-spring-boot-app || true
            docker rm my-nginx || true

            docker run -d --name my-react-app -p 3000:3000 ${{ secrets.DOCKER_REPO }}/my-react-app:latest
            docker run -d --name my-spring-boot-app -p 8080:8080 ${{ secrets.DOCKER_REPO }}/my-spring-boot-app:latest
            docker run -d --name my-nginx -p 80:80 ${{ secrets.DOCKER_REPO }}/my-nginx:latest
          EOF
